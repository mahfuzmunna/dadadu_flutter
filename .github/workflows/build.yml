# Name of your workflow
name: Flutter Android Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Java environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # 3. Set up Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0' # Specify your project's Flutter version
          channel: 'stable'
          cache: true
      # ... after setting up Flutter

      # Clean the project
      - name: Clean Flutter project
        run: flutter clean

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get
      
      # ... rest of the workflow


      # 5. (Optional) Run an analyzer to check for code issues
#      - name: Analyze project
#        run: flutter analyze

      # 6. (Optional) Run widget tests
#      - name: Run tests
#        run: flutter test

      # 7. Build the Android APK
      - name: Build APK
        run: flutter build apk --release

      # 8. Build the Android App Bundle (AAB)
#      - name: Build App Bundle
#        run: flutter build appbundle --release

      # 9. Upload the generated APK file
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # 10. Upload the generated AAB file
#      - name: Upload App Bundle artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-appbundle
#          path: build/app/outputs/bundle/release/app-release.aab
