// lib/features/upload/data/models/post_model.dart

import 'package:dadadu_app/features/upload/domain/entities/post_entity.dart';

class PostModel extends PostEntity {
  const PostModel({
    required super.id,
    required super.userId,
    required super.videoUrl,
    required super.thumbnailUrl,
    required super.caption,
    required super.tag,
    super.diamonds = 0,
    super.comments = 0,
    required super.createdAt,
    super.isDisabled = false,
    super.visibilityLevel = 0,
    super.views = 0,
    super.location,
  });

  factory PostModel.fromMap(Map<String, dynamic> map) {
    return PostModel(
      id: map['id'] as String,
      userId: map['user_id'] as String,
      videoUrl: map['video_url'] as String,
      thumbnailUrl: map['thumbnail_url'] as String,
      caption: map['caption'] as String,
      tag: map['tag'] as String,
      diamonds: map['diamonds'] as int,
      comments: map['comments'] as int,
      createdAt: map['created_at'] as String,
      isDisabled: map['disabled'] as bool,
      visibilityLevel: map['visibility_level'] as int,
      views: map['views'] as int,
      location: map['location'] as String,
    );
  }

// To Map for saving to Supabase (using snake_case for Supabase column names)
  Map<String, dynamic> toMap() {
    return {
      // 'id' is often auto-generated by the database and not included in inserts.
      'user_id': userId,
      'video_url': videoUrl,
      'thumbnail_url': thumbnailUrl,
      'caption': caption,
      'tag': tag,
      'diamonds': diamonds,
      'comments': comments,
      // Convert DateTime back to an ISO 8601 string for Supabase.
      'created_at': createdAt,
      'disabled': isDisabled,
      'visibility_level': visibilityLevel,
      'views': views,
      'location': location,
    };
  }

// Optional: A copyWith method for immutability and easier updates
  PostModel copyWith({
    String? id,
    String? userId,
    String? videoUrl,
    String? thumbnailUrl,
    String? caption,
    String? tag,
    int? diamonds,
    int? comments,
    String? createdAt,
    bool? isDisabled,
    int? visibilityLevel,
    int? views,
    String? location,
  }) {
    return PostModel(
      id: id ?? this.id,
      userId: userId ?? this.userId,
      videoUrl: videoUrl ?? this.videoUrl,
      thumbnailUrl: thumbnailUrl ?? this.thumbnailUrl,
      caption: caption ?? this.caption,
      tag: tag ?? this.tag,
      diamonds: diamonds ?? this.diamonds,
      comments: comments ?? this.comments,
      createdAt: createdAt ?? this.createdAt,
      isDisabled: isDisabled ?? this.isDisabled,
      visibilityLevel: visibilityLevel ?? this.visibilityLevel,
      views: views ?? this.views,
      location: location ?? this.location,
    );
  }
}